<div class="container">
  <div class='row'>
    <div class="col-sm-12 col-md-8 col-lg-5 px-5 px-sm-0 mx-auto">
      <h3>作品投稿</h3>
      <%= form_with(model: @illust, url: illusts_path, local: true) do |f| %>
        <table>
          <tr>
            <th>画像</th>
            <td><%= f.file_field :illust_images, multiple: true, accept: "image/*" %></td>
          </tr>
          <tr>
            <th>タイトル</th>
            <td><%= f.text_field :illust_name, class: "form-control custom-input" %></td>
          </tr>
          <tr>
            <th>説明</th>
            <td><%= f.text_area :illust_body, class: "form-control custom-input" %></td>
          </tr>
          <tr>
           <th>タグ</th>
              <td><%= f.text_field :tag_list, value: @illust.tag_list.join(','), class: 'form-control custom-input' %></tb>
           </tr>
          <tr>
            <th></th>
            <td><%= f.label",を入力することで複数のタグを付けることができます。" %></td><br>
          </tr>
          <tr>
            <th></th>
            <td><%= f.label"例：イラスト 猫　漫画" %></td>
          </tr>

          <tr>
            <th>AIイラスト</th>
            <td>
              <%= f.label :ai_status_on_ai, 'AIイラストです' %>
              <%= f.radio_button :is_active, :true %>
              <%= f.label :ai_status_draft, 'AIイラストではありません' %>
              <%= f.radio_button :is_active, :false, checked: true %>
            </td>
          </tr>
          <tr>
            <td>
              <%= f.submit '投稿', class: "btn form-control custom-button" %>
            </td>
          </tr>
          <% end %>


        </table>
        <img id="preview_0" style="width:15%;">
        <img id="preview_1" style="width:15%;">
        <img id="preview_2" style="width:15%;">
        <img id="preview_3" style="width:15%;">
        <img id="preview_4" style="width:15%;">

         <script>
$('#illust_illust_images_images').on('change', function (e) {

    if(e.target.files.length > 5){

      alert('一度に投稿できるのは五枚までです。');
      // 五枚以上の画像を選択していた場合、選択したファイルをリセット。
      $('#illust_illust_images_images').val = "";

      // 以前の画像のプレビューが残っていた場合は、
      // まだ画像選択できていると勘違いを誘発するため初期化。
      for( let i = 0; i < 5; i++) {
        $(`#preview_${i}`).attr('src', "");
      }

    }else{
      let reader = new Array(5);

      // 画像選択を二回した時、一回目より数が少なかったりすると画面上に残るので初期化
      for( let i = 0; i < 5; i++) {
        $(`#preview_${i}`).attr('src', "");
      }

      for(let i = 0; i < e.target.files.length; i++) {
        reader[i] = new FileReader();
        reader[i].onload = finisher(i,e);
        reader[i].readAsDataURL(e.target.files[i]);

        // onloadは別関数で準備しないとfor文内では使用できないので、関数を準備。
        function finisher(i,e){
          return function(e){
          $(`#preview_${i}`).attr('src', e.target.result);
          }
        }
      }
   }
});
</script>

    </div>
  </div>
</div>


